{"remainingRequest":"/Users/adrienbannwarth/git/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adrienbannwarth/git/portfolio/src/views/LoaderHome.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/adrienbannwarth/git/portfolio/src/views/LoaderHome.vue","mtime":1584878152570},{"path":"/Users/adrienbannwarth/git/portfolio/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/adrienbannwarth/git/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adrienbannwarth/git/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBOYXZQcm9qZXQgZnJvbSAiQC9jb21wb25lbnRzL05hdlByb2pldCI7CmltcG9ydCB7IFRpbWVsaW5lTGl0ZSwgRXhwbyB9IGZyb20gImdzYXAiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJob21lIiwKICBjb21wb25lbnRzOiB7CiAgICBOYXZQcm9qZXQKICB9LAoKICBtb3VudGVkKCkgewogICAgY29uc3QgdGltZWxpbmUgPSBuZXcgVGltZWxpbmVMaXRlKCk7CgogICAgdGltZWxpbmUuZnJvbSgiLmZpcnN0LW5hbWUiLCAwLjUsIHsKICAgICAgeTogMzAsCiAgICAgIG9wYWNpdHk6IDAsCiAgICAgIGRlbGF5OiAwLjUsCiAgICAgIGVhc2U6IEV4cG8uZWFzZUluT3V0CiAgICB9KTsKICAgIHRpbWVsaW5lLnRvKCIuZmlyc3QtbmFtZSIsIDAuNSwgewogICAgICB5OiAzMCwKICAgICAgb3BhY2l0eTogMCwKICAgICAgZGVsYXk6IDAuNSwKICAgICAgZWFzZTogRXhwby5lYXNlSW5PdXQKICAgIH0pOwoKICAgIHRpbWVsaW5lLmZyb20oIi5qb2IiLCAwLjUsIHsKICAgICAgeTogMzAsCiAgICAgIG9wYWNpdHk6IDAsCiAgICAgIGRlbGF5OiAwLjUsCiAgICAgIGVhc2U6IEV4cG8uZWFzZUluT3V0CiAgICB9KTsKICAgIHRpbWVsaW5lLnRvKCIuam9iIiwgMC41LCB7CiAgICAgIHk6IDMwLAogICAgICBvcGFjaXR5OiAwLAogICAgICBkZWxheTogMC41LAogICAgICBlYXNlOiBFeHBvLmVhc2VJbk91dAogICAgfSk7CiAgfQp9Owo="},{"version":3,"sources":["LoaderHome.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LoaderHome.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container container-home\">\n    <router-link to=\"/about\">\n      <div ref=\"profile\" class=\"nav-prolife\">About</div>\n    </router-link>\n\n    <div class=\"loader-container\">\n      <div class=\"content-text\">\n        <p>Loading Loading Loading</p>\n        <p>Adrien Bannwarth Adrien Bannwarth</p>\n        <p>Developer front end Developer front end</p>\n        <p>Loading Loading Loading</p>\n        <p>Adrien Bannwarth Adrien Bannwarth</p>\n        <p>Developer front end Developer front end</p>\n      </div>\n      <div class=\"content\">\n        <h1 class=\"first-name\">Adrien Bannwarth</h1>\n        <h1 class=\"job\">Front end developer</h1>\n      </div>\n    </div>\n\n    <NavProjet />\n  </div>\n</template>\n\n<script>\nimport NavProjet from \"@/components/NavProjet\";\nimport { TimelineLite, Expo } from \"gsap\";\n\nexport default {\n  name: \"home\",\n  components: {\n    NavProjet\n  },\n\n  mounted() {\n    const timeline = new TimelineLite();\n\n    timeline.from(\".first-name\", 0.5, {\n      y: 30,\n      opacity: 0,\n      delay: 0.5,\n      ease: Expo.easeInOut\n    });\n    timeline.to(\".first-name\", 0.5, {\n      y: 30,\n      opacity: 0,\n      delay: 0.5,\n      ease: Expo.easeInOut\n    });\n\n    timeline.from(\".job\", 0.5, {\n      y: 30,\n      opacity: 0,\n      delay: 0.5,\n      ease: Expo.easeInOut\n    });\n    timeline.to(\".job\", 0.5, {\n      y: 30,\n      opacity: 0,\n      delay: 0.5,\n      ease: Expo.easeInOut\n    });\n  }\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.nav-prolife {\n  color: white !important;\n  mix-blend-mode: inherit;\n}\n</style>"]}]}